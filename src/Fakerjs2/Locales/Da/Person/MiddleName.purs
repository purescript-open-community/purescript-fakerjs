module Fakerjs2.Locales.Da.Person.MiddleName (female, generic, male) where

import Data.Array.NonEmpty (NonEmptyArray)
import Data.String.NonEmpty (NonEmptyString)
import Fakerjs2.Types (MiddleNameFemale, MiddleNameGeneric, MiddleNameMale)
import Unsafe.Coerce (unsafeCoerce)

female :: MiddleNameFemale
female = (unsafeCoerce :: Array String -> NonEmptyArray NonEmptyString)
  [ "Birk"
  , "Bjerg"
  , "Bjerre"
  , "Bundgaard"
  , "Dahl"
  , "Dal"
  , "Dam"
  , "Feldt"
  , "Frost"
  , "Grøn"
  , "Hald"
  , "Hjorth"
  , "Holm"
  , "Husum"
  , "Jul"
  , "Kjær"
  , "Klit"
  , "Koch"
  , "Krog"
  , "Linde"
  , "Lund"
  , "Mose"
  , "Mølgaard"
  , "Nord"
  , "Præst"
  , "Rosen"
  , "Skov"
  , "Smed"
  , "Vestergaard"
  , "Østergaard"
  ]

generic :: MiddleNameGeneric
generic = (unsafeCoerce :: Array String -> NonEmptyArray NonEmptyString)
  [ "Birk"
  , "Bjerg"
  , "Bjerre"
  , "Bundgaard"
  , "Dahl"
  , "Dal"
  , "Dam"
  , "Feldt"
  , "Frost"
  , "Grøn"
  , "Hald"
  , "Hjorth"
  , "Holm"
  , "Husum"
  , "Jul"
  , "Kjær"
  , "Klit"
  , "Koch"
  , "Krog"
  , "Linde"
  , "Lund"
  , "Mose"
  , "Mølgaard"
  , "Nord"
  , "Præst"
  , "Rosen"
  , "Skov"
  , "Smed"
  , "Vestergaard"
  , "Østergaard"
  ]

male :: MiddleNameMale
male = (unsafeCoerce :: Array String -> NonEmptyArray NonEmptyString)
  [ "Birk"
  , "Bjerg"
  , "Bjerre"
  , "Bundgaard"
  , "Dahl"
  , "Dal"
  , "Dam"
  , "Feldt"
  , "Frost"
  , "Grøn"
  , "Hald"
  , "Hjorth"
  , "Holm"
  , "Husum"
  , "Jul"
  , "Kjær"
  , "Klit"
  , "Koch"
  , "Krog"
  , "Linde"
  , "Lund"
  , "Mose"
  , "Mølgaard"
  , "Nord"
  , "Præst"
  , "Rosen"
  , "Skov"
  , "Smed"
  , "Vestergaard"
  , "Østergaard"
  ]
